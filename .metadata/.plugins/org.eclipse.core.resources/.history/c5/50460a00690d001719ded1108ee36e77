package com.taotao.manage.service;

import org.omg.CORBA.PUBLIC_MEMBER;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import redis.clients.jedis.ShardedJedis;
import redis.clients.jedis.ShardedJedisPool;

@Service
public class RedisService {
    @Autowired
    private ShardedJedisPool shardedJedisPool;
    
    private <T> T execute(Function<T, ShardedJedis> fun){
        ShardedJedis shardedJedis = null;
        try {
            // 从连接池中获取到jedis分片对象
            shardedJedis = shardedJedisPool.getResource();
            return fun.callback(shardedJedis);
        } finally {
            if (null != shardedJedis) {
                // 关闭，检测连接是否有效，有效则放回到连接池中，无效则重置状态
                shardedJedis.close();
            }
        } 
    }
    /**
     * 
     * 执行SET操作
     * @param key
     * @param value
     * @return
     */
    public String set(final String key,final String value){
        return this.execute(new Function<String, ShardedJedis>() {

            @Override
            public String callback(ShardedJedis e) {
                // TODO Auto-generated method stub
                return e.set(key, value);
            }
           });
     }
    /**
     * 
     * 执行GET操作
     * @param key
     * @param value
     * @return
     */
    public String get(final String key){
        return this.execute(new Function<String, ShardedJedis>() {

            @Override
            public String callback(ShardedJedis e) {
                // TODO Auto-generated method stub
                return e.get(key);
            }
           });
     }
    /**
     * 
     * 执行删除操作
     * @param key
     * @return
     */
    public Long del(final String key){
        return this.execute(new Function<Long, ShardedJedis>() {

            @Override
            public Long callback(ShardedJedis e) {
                // TODO Auto-generated method stub
                return e.del(key);
            }
           });
     }
    /**
     * 
     * 执行expire操作
     * @param key
     * @return
     */
    public Long expire(final String key,final Integer seconds){
        return this.execute(new Function<Long, ShardedJedis>() {

            @Override
            public Long callback(ShardedJedis e) {
                // TODO Auto-generated method stub
                return e.expire(key,seconds);
            }
           });
     }
    
    
    
    
}
