package com.taotao.cart.service;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.github.abel533.mapper.Mapper;
import com.taotao.cart.pojo.Cart;
import com.taotao.common.util.CookieUtils;

@Service
public class CartCookieService {

    
    public static final String COOKIE_NAME = "TT_CART";
    
    
    private static final ObjectMapper MAPPER = new ObjectMapper();
    
    private static final Integer COOKIE_TIME_INTEGER = 60*60*24*30*12;
   
    public List<Cart> queryCartList(HttpServletRequest request) {
        String cookieValue = CookieUtils.getCookieValue(request, COOKIE_NAME);
        try {
            return MAPPER.readValue(cookieValue, 
                    MAPPER.getTypeFactory().constructCollectionType(List.class, Cart.class));
        } catch (Exception e) {
            e.printStackTrace();
        } 
        return new ArrayList<Cart>(0);
    }

    public void addItemToCart(Long itemId, HttpServletRequest request, HttpServletResponse response) {
        
        List<Cart> cartList = this.queryCartList(request);
        //判断该购物车中是否有商品存在,如果存在，数量相加，反之直接添加
        Cart cart = null;
        for (Cart c : cartList) {
            if(c.getItemId().longValue()== itemId.longValue()){
                cart = c;
                break;
            }
        }
        
        if(null==cart){
            //不存在
            
            
        }else {
            //存在
            cart.setNum(cart.getNum()+1);//TODO
            cart.setUpdated(new Date());
            
        }
        
        //写入到Cookie
        try {
            CookieUtils.setCookie(request, response, COOKIE_NAME, MAPPER.writeValueAsString(cartList), COOKIE_TIME_INTEGER, true);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

}
