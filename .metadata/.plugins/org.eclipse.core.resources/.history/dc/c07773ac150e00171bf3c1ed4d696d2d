package com.taotao.manage.service;

import java.io.IOException;
import java.util.List;






import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.abel533.entity.Example;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.taotao.common.bean.EasyUIResult;
import com.taotao.common.service.ApiService;
import com.taotao.manage.mapper.ItemMapper;
import com.taotao.manage.pojo.Item;
import com.taotao.manage.pojo.ItemDesc;
import com.taotao.manage.pojo.ItemParamItem;
@Service
public class ItemService extends BaseService<Item>{
    @Autowired
    private ItemDescService itemDescService;
    @Autowired
    private ItemMapper itemMapper;
    @Autowired
    private ItemParamItemService itemParamItemService;
    
    @Autowired
    private ApiService apiService;
    /**
     * 
     * 新增商品
     * @param item
     * @param desc
     * @return
     */
    public Boolean saveItem(Item item,String desc,String itemParams){
        item.setId(null);
        item.setStatus(1);
        //保存商品数据
        Integer count1 = super.save(item);
        
        ItemDesc itemDesc = new ItemDesc();
        itemDesc.setItemId(item.getId());
        itemDesc.setItemDesc(desc);
        
        //保存商品描述的数据
        Integer count2 = this.itemDescService.save(itemDesc);
        
        //保存商品规格参数
        ItemParamItem itemParamItem = new ItemParamItem();
        itemParamItem.setItemId(item.getId());
        itemParamItem.setParamData(itemParams);
        Integer count3 = this.itemParamItemService.save(itemParamItem);
        
        return count1.intValue()==1&&count2.intValue()==1 && count3.intValue()==1;
        
    }
    /**
     * 
     * 分页显示
     * @param page
     * @param rows
     * @return
     */
    public EasyUIResult queryItemList(Integer page, Integer rows) {
        PageHelper.startPage(page,rows);
        Example example = new Example(Item.class);
        example.setOrderByClause("updated DESC");
        example.createCriteria().andEqualTo("status", 1);
        List<Item> list = this.itemMapper.selectByExample(example);
        PageInfo<Item> pageInfo = new PageInfo<Item>(list);
        return new EasyUIResult(pageInfo.getTotal(),pageInfo.getList());
    }
    /**
     * 
     * 删除商品
     * @param ids
     * @return
     */
    public Integer updateSelectiveByIds(List<Object> ids) {
        Integer count =-1;
        if (ids.size()>0 && !ids.isEmpty()) {
            for (Object id : ids) {
                
                //Item item = this.itemMapper.selectByPrimaryKey(id);
                Item item = new Item();
                long id1 = Long.valueOf(id.toString());
                item.setId(id1);
                System.out.println(id1);
                item.setStatus(3);
                Example example = new Example(Item.class);
                example.createCriteria().andEqualTo("id", id);
                count = this.itemMapper.updateByExampleSelective(item, example);
            }
            return count;
        }
        return count;
    }
    
    public Boolean updateItem(Item item, String desc) {
        //强制设置不能更新的字段为null
        item.setCreated(null);
        item.setStatus(null);
        
        Integer count1 = super.updateSelective(item);
        
        //更新商品描述数据
        ItemDesc itemDesc = new ItemDesc();
        itemDesc.setItemDesc(desc);
        itemDesc.setItemId(item.getId());
        Integer count2 = this.itemDescService.updateSelective(itemDesc);
        
        //通知其他系统修改的商品，删除缓存
        String url = "http://www.taotao.com/item/cache/"+item.getId()+".html";
        try {
            this.apiService.doPost(url);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        
        
        return count1.intValue()==1&&count2.intValue()==1;
    }
    
}
