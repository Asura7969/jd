package com.taotao.cart.service;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import threadlocal.UserThreadLocal;

import com.github.abel533.entity.Example;
import com.taotao.cart.bean.ItemQ;
import com.taotao.cart.bean.User;
import com.taotao.cart.mapper.CartMapper;
import com.taotao.cart.pojo.Cart;


@Service
public class CartService {

    @Autowired
    private CartMapper cartMapper;
    @Autowired
    private ItemService itemService;
    
    public void addItemToCart(Long itemId) {
        User user = UserThreadLocal.get();
        
        
        Cart record = new Cart();
        record.setItemId(itemId);
        record.setUserId(user.getId());
        Cart cart = this.cartMapper.selectOne(record);
        
        if(null==null){
            //不存在
            cart = new Cart();
            
            //TODO
            cart.setItemId(itemId);
            cart.setNum(1);
            cart.setUserId(user.getId());
            cart.setCreated(new Date());
            cart.setUpdated(cart.getCreated());
            
            //查询商品的基本信息
            ItemQ itemQ = this.itemService.queryItemQById(itemId);
            if(null==itemQ){
                return;
            }
            String[] imgs = itemQ.getImages();
            if(null==imgs&&imgs.length>0){
                cart.setItemImage(itemQ.getImages()[0]);
            }
            
            cart.setItemTitle(itemQ.getTitle());
            cart.setItemPrice(itemQ.getPrice());
            
            this.cartMapper.insert(cart);
        }else {
            //存在，数量要相加，默认是1
            cart.setNum(cart.getNum()+1);
            cart.setUpdated(new Date());
            
            this.cartMapper.updateByPrimaryKey(cart);
        }
        
    }
    /**
     * 查询购物车商品
     * @return
     */
    public List<Cart> queryCartList() {
        
        Example example = new Example(Cart.class);
        //设置排序条件
        example.setOrderByClause("created DESC");
        //设置查询条件
        example.createCriteria().andEqualTo("userId", UserThreadLocal.get().getId())
        return this.cartMapper.selectByExample(example);
    }

}
