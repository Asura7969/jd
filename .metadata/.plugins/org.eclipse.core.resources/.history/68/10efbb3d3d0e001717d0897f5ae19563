package com.taotao.sso.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.github.abel533.mapper.Mapper;
import com.taotao.sso.pojo.User;
import com.taotao.sso.service.UserService;

@Controller
@RequestMapping("user")
public class UserController {
    @Autowired
    private UserService UserService;
    
    /**
     * 
     * 去注册页面
     * @return
     */
    @RequestMapping(value="register",method=RequestMethod.GET)
    public String toRegister(){
        return "register"; 
    }
    
    @RequestMapping(value="{param}/{type}",method=RequestMethod.GET)
    public ResponseEntity<Boolean> check(@PathVariable("param")String param,@PathVariable("type")Integer type){
        
        try {
            Boolean bool = this.UserService.check(param,type);
            if(bool==null){
                return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(null);
            }
            //为了兼容前端JS逻辑，将返回值取反
            return ResponseEntity.ok().body(!bool);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null);
        
    }
    
    @RequestMapping(value="doRegister",method=RequestMethod.GET)
    public ResponseEntity<Map<String,Object>> doRegister(User user){
        
        try {
            Map<String, Object> map = new HashMap<String, Object>();
            
            Boolean bool = this.UserService.doRegister(user);
            if(bool){//表示注册成功
                map.put("status", "200");
            }else {
                map.put("status", "566");
                map.put("data", "请重新注册");
            }
            return ResponseEntity.ok().body(map);
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null);
        
        
    }

}
